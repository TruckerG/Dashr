@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">

    var TrendItem = function(theValue, theTimestamp) {
        this.value = theValue,
        this.timestamp = theTimestamp
    };

    var chartOptions = {
        series: { shadowSize: 0 }, // drawing is faster without shadows
        yaxis: { min: 0, max: 100 },
        xaxis: { mode: "time" }
    };


    var ViewModel = function () {
        this.powerValue = ko.observable();
        this.powerValueList = ko.observableArray();
        this.powerValueSeries = [];
        this.averagePowerValueSeries = [];
        this.count = 0;
        this.addPowerValue = function (powerValueToAdd) {
            this.powerValue(powerValueToAdd);

            var item = new TrendItem(powerValueToAdd, new Date());

            if (this.powerValueList().length > 10) {
                this.powerValueList.shift();
            }
            this.powerValueList.push(item);

            this.count = this.count + 1;

            if (this.powerValueSeries.length > 10) {
                this.powerValueSeries.shift();
            }
            this.powerValueSeries.push([item.timestamp.getTime(), item.value]);

            if (this.averagePowerValueSeries.length > 10) {
                this.averagePowerValueSeries.shift();
            }
            this.averagePowerValueSeries.push([item.timestamp.getTime(), this.averagePowerValue()]);

            // trend
            this.plot.setData([this.powerValueSeries, this.averagePowerValueSeries]);
            this.plot.setupGrid();
            this.plot.draw();
        };

        this.averagePowerValue = ko.computed(function () {
            var sum = 0;
            for (var i = 0; i < this.powerValueList().length; i++) {
                sum = sum + this.powerValueList()[i].value;
            }
            return (sum / this.powerValueList().length).toFixed(1);
        }, this);
    };

    var pageViewModel = new ViewModel();
    

    var lastGeneratedValue = 50;
    function updatePage() {
        
        var value = lastGeneratedValue + Math.floor(Math.random() * 20 - 10);
        if (value < 0)
            value = 0;
        if (value > 100)
            value = 100;

        pageViewModel.addPowerValue(value);
        lastGeneratedValue = value;
    }



    ko.bindingHandlers.dateString = {
        update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
            var value = valueAccessor(),
            allBindings = allBindingsAccessor();
            var valueUnwrapped = ko.utils.unwrapObservable(value);
            var pattern = allBindings.datePattern || 'yyyy-MM-dd hh:mm:ss';
            $(element).text(valueUnwrapped.toString(pattern));
        }
    }

    $(function () {

        pageViewModel.plot = $.plot($("#chart"), [[1, 2], [2, 10]], chartOptions);
        updatePage();
        setInterval(updatePage, 750);


        ko.applyBindings(pageViewModel);
    });

</script>

<p>
    This dashboard sample shows information about power readings.
</p>
<table>
    <tr>
        <td>
            <a class='multi-line-button' href='#' style='width:5em; height: 4.5em;'>
                <span class='title' data-bind="text: powerValue">300</span>
                <span class='subtitle'>Actual (kW)</span>
            </a>
        </td>
        <td>
            <a class='multi-line-button' href='#' style='width:5em; height: 4.5em;'>
                <span class='title' data-bind="text: averagePowerValue">300</span>
                <span class='subtitle'>Average (kW)</span>
            </a>
        </td>
    </tr>
</table>
      
<!-- Example row of columns -->
<div class="row">
    <div class="span8">
        <div id="chart" style="height: 250px"></div>    
    </div>
    <div class="span4">
        <div style="height: 250px; overflow:auto">
            <table style="width: 100%">
                <thead>
                    <tr>
                        <th style="text-align:left">Power Value</th>
                        <th style="text-align:left">Timestamp</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: powerValueList">
                    <tr>
                        <td data-bind="text: value"></td>
                        <td data-bind="dateString: timestamp"></td>
                    </tr>
                </tbody>
            </table>
        </div>        
    </div>
</div>

     
